<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lecshop.storerole.mapper.StoreRoleMapper">
    <resultMap id="BaseResult" type="com.lecshop.storerole.bean.StoreRole">
        <id column="id" property="id"/>
        <result column="name" property="roleName"/>
        <result column="store_id" property="storeId"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
    </resultMap>
    <select id="queryStoreRoleCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from ls_store_role where store_id=#{storeId}
        <if test="roleName != null">
            AND `name` like CONCAT(CONCAT('%', #{roleName}),'%')
        </if>
    </select>
    <select id="queryAllStoreRole" parameterType="java.util.Map" resultMap="BaseResult">
        select id,`name`,store_id,create_time,modify_time from ls_store_role
        where store_id=#{storeId}
        <if test="roleName != null">
            AND `name` like CONCAT(CONCAT('%', #{roleName}),'%')
        </if>
        <if test="isPaging ==1">
            limit #{startRowNum},#{pageSize}
        </if>
    </select>
    <select id="roleNameCheck" parameterType="java.lang.String" resultMap="BaseResult">
        SELECT * FROM ls_store_role WHERE `name`=#{roleName}
    </select>
    <insert id="addStoreRole" parameterType="com.lecshop.storerole.bean.StoreRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ls_store_role (`name`,store_id,create_time) VALUES (#{roleName},#{storeId},now())
    </insert>
    <insert id="addStoreRoleAndAuth" parameterType="java.util.List">
        INSERT INTO ls_store_role_authority (role_id,authority_id,create_time) VALUES
        <foreach collection="list" index="index" item="roleAndAuth" separator=",">
            (
            #{roleAndAuth.roleId},#{roleAndAuth.id},now()
            )
        </foreach>
    </insert>
    <select id="queryAuthIdByRoleId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT authority_id FROM ls_store_role_authority WHERE role_id=#{roleId}
    </select>
    <delete id="deleteAllAuthByRoleId" parameterType="java.util.List">
        DELETE FROM ls_store_role_authority WHERE role_id IN
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteRole" parameterType="java.util.Map">
        DELETE FROM ls_store_role WHERE store_id=#{storeId} AND id IN
        <foreach collection="idArrays" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <update id="editRoleName" parameterType="com.lecshop.storerole.bean.StoreRole">
        UPDATE ls_store_role SET `name`=#{roleName},modify_time=now() WHERE id=#{id} AND store_id=#{storeId}
    </update>
    <select id="queryStoreRoleForAddStaff" resultMap="BaseResult" parameterType="java.lang.Long">
        SELECT id,`name`,store_id,create_time,modify_time from ls_store_role WHERE store_id=#{storeId}
    </select>
    <insert id="linkStaffRole" parameterType="com.lecshop.storerole.bean.RoleAndCustomer">
        INSERT INTO ls_customer_role (customer_id,role_id,create_time) VALUES (#{customerId},#{roleId},now())
    </insert>
    <delete id="deleteStoreStaff" parameterType="java.util.List">
        DELETE FROM ls_customer_role WHERE customer_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <update id="updateRoleId" parameterType="com.lecshop.storerole.bean.RoleAndCustomer">
        UPDATE ls_customer_role SET role_id=#{roleId} WHERE customer_id=#{customerId}
    </update>
</mapper>